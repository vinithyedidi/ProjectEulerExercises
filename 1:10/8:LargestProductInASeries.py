# Problem 8:
# The four adjacent digits in the 1000-digit number below that have the greatest product are 9 * 9 * 8 * 9 = 5832.
# Find the thirteen adjacent digits in the number that have the greatest product. What is the value of this product?

num = ('7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891'
      '1294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617'
      '3185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105'
      '1585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522'
       '4352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137'
       '5657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823'
       '0863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421'
       '7506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071'
       '76060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450')

def solution(n):
    max_prod = 0
    i = 0
    while i < len(num) - n:
        prod = 1
        for j in range(n):
            prod *= int(num[i+j])
        if prod > max_prod:
            max_prod = prod
        i += 1
    return max_prod

def main():
    sol = solution(13)
    print(sol)


if __name__ == '__main__':
    main()